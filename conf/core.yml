#
# Default Settings
# ================
#

defaults: # default config
  debug: false
  version: 'collective-v0.0.14'
  vagrant_plugins:
    - 'vagrant-omnibus'
    - 'vagrant-hosts'
    - 'vagrant-cachier'
    # - 'vagrant-berkshelf'
  vm: 'dev'
  cluster: 'base'
  ui: false
  universal_node_name: 'cluster_node' 
  universal_node_pem: 'cluster_node.pem'


#
# Location Settings
# ================
#

locations:
  vagrant_home: '~/.vagrant.d'
  base_boxes: 'base_boxes'
  base_boxes_export: '/Volumes/jason_storage/ISOs/'
  init_scripts: 'manifests/init_scripts'
  downloads: 'manifests/downloads'
  repos: 'manifests/repos'
  cookbooks: 'manifests/chef-server/cookbooks'
  berkshelf: 'manifests/chef-server'
  roles: 'manifests/chef-server/roles'
  resources: 'manifests/resources'
  chef_client_keys: 'manifests/resources/chef_client'


#
# Download Settings
# ================
#

downloads:
  files:
    - file:
      name: 'ubuntu_12_04_lts.box'
      url: 'http://hc-vagrant-files.s3.amazonaws.com/precise64.box'
      location: 'base_boxes'
      track: false
    - file:
      name: 'ubuntu_13_04_lts.box'
      url: 'http://cloud-images.ubuntu.com/vagrant/raring/current/raring-server-cloudimg-amd64-vagrant-disk1.box'
      location: 'base_boxes'
      track: false
    - file:
      name: 'ubuntu_13_10.box'
      url: 'http://cloud-images.ubuntu.com/vagrant/saucy/current/saucy-server-cloudimg-amd64-vagrant-disk1.box'
      location: 'base_boxes'
      track: false
    - file:
      name: 'docker-reference.box'
      url: 'https://oss-binaries.phusionpassenger.com/vagrant/boxes/ubuntu-12.04.3-amd64-vbox.box'
      location: 'base_boxes'
      track: false
    - file:
      name: 'chefserver.deb'
      url: 'https://opscode-omnibus-packages.s3.amazonaws.com/ubuntu/12.04/x86_64/chef-server_11.0.8-1.ubuntu.12.04_amd64.deb'
      location: 'downloads'
      track: false
    - file:
      name: 'mesos_14_64.deb'
      url: 'http://downloads.mesosphere.io/master/ubuntu/13.04/mesos_0.14.2_amd64.deb'
      location: 'downloads'
      track: false
    - file:
      name: 'marathon.conf'
      url: 'http://downloads.mesosphere.io/marathon/marathon.conf'
      location: 'downloads'
      track: false


#
# Repo Settings
# ================
#
# ./repos/                      # where we keep misc repos
# ./repos/cookbooks             # cookbooks for local dev work (vagrant level)
# ./chef-server/cookbooks       # cookbooks for chef-server, NOT TO BE USED BY VAGRANT
repos:
  - repo:
    name: 'devstack'
    url: 'https://github.com/openstack-dev/devstack.git'
    tag: ''
    post_install: ''
    location: ''
  - repo:
    name: 'mesos-docker'
    url: 'https://github.com/mesosphere/mesos-docker.git'
    tag: ''
    post_install: ''
    location: ''
  - repo:
    name: 'mesos-deb-packaging'
    url: 'https://github.com/deric/mesos-deb-packaging.git'
    tag: ''
    post_install: ''
    location: ''
  # - repo:
  #   name: 'bind'
  #   url: 'https://github.com/atomic-penguin/cookbook-bind.git'
  #   tag: ''
  #   post_install: ''
  #   location: 'cookbooks'
  # - repo:
  #   name: 'git'
  #   url: 'https://github.com/opscode-cookbooks/git.git'
  #   tag: 'v2.7.0'
  #   post_install: ''
  #   location: 'cookbooks'
  # - repo:
  #   name: 'chef-client'
  #   url: 'https://github.com/opscode-cookbooks/chef-client.git'
  #   tag: ''
  #   post_install: ''
  #   location: 'cookbooks'
  # - repo:
  #   name: 'chef-server'
  #   url: 'https://github.com/JasonGiedymin/chef-server.git'
  #   tag: 'v2.0.1'
  #   post_install: ''
  #   location: 'cookbooks'
  # - repo:
  #   name: 'rvm'
  #   url: 'https://github.com/fnichol/chef-rvm.git'
  #   tag: ''
  #   post_install: ''
  #   location: 'cookbooks'
  # - repo:
  #   name: 'java'
  #   url: 'https://github.com/opscode-cookbooks/java.git'
  #   tag: ''
  #   post_install: ''
  #   location: 'cookbooks'



#
# Cluster Settings
# ================
# NOTE: even though a chef node and nodes are specified here, the 
#       specific node entry must allow for chef_client or else
#       it will not be bootstrapped

clusters: # cluster config
  - cluster:
      name: 'base'
      managed: true
      nodes: 
        - 'node1' # nodes first
        - 'chef' # chef last as it will then knife across nodes
      bootstrap_nodes:
        - 'node1'
      chef_node: 'chef'
      user: 'vagrant'
      pass: 'vagrant'
  # - cluster:
  #     name: 'jnet'
  #     managed: false
  #     nodes: # nodes that make up the cluster
  #       - 'jnode1' # nodes first
  #     bootstrap_nodes: # specific nodes to bootstrap
  #       - 'jnode1'
  #     chef_node: 'chef'
  #     user: ~ # ignored under unmanaged
  #     pass: ~ # ignored under unmanaged
  #     user_pass_env: 'JNETACCESS' #used as '$JNETACCESS_[USER|PASS]'
        

#
# Node Settings
# ================
# Note: by setting `run_client` to true, it will expect a chef node
#       to be present

nodes:  # node registry
  # - node:
  #     hostname: 'dns'
  #     box: 'dns'
  #     desc: 'NET layer DNS server'
  #     cpus: 1
  #     mem: 256
  #     ip: '10.10.10.01'
  #     mac: '02895C872CC5'
  #     url: 'ubuntu_12_04_lts.box'
  #     init: 'init.sh'
  #     roles:
  #       - 'role-bind9'
  #     run_client: false
  #     chef_node: ~

  # Out of commission for now
  # - node:
  #     hostname: 'chef'
  #     box: 'chef'
  #     desc: 'NET layer chef server that can bootstrap ANY node or cluster'
  #     cpus: 1 # more than 1 cpu fails vagrant, sigh...
  #     mem: 512
  #     ip: '10.10.10.15'
  #     mac: '080027EB6B03'
  #     url: 'ubuntu_12_04_lts.box'
  #     init: 'init.sh'
  #     roles:
  #       - 'role-runtimes'
  #     run_client: false
  #     chef_node: ~

  - node:
      hostname: 'chef'
      box: 'chef'
      desc: 'chef server'
      cpus: 1 # more than 1 cpu fails vagrant, sigh...
      mem: 512
      ip: '10.10.10.10'
      mac: '024E89B94036'
      url: 'ubuntu_12_04_lts.box'
      init: 'init.sh'
      roles:
        - 'role-chefzero'
      run_client: false
      chef_node: ~

  - node:
      hostname: 'node1'
      box: 'node1'
      desc: 'a primary node to be used by a cluster'
      cpus: 2
      mem: 768
      ip: '10.10.10.12'
      mac: '080027BE8715'
      url: 'docker-reference.box'
      init: 'init.sh'
      roles:
        - 'role-cluster-node'
      run_client: false
      chef_node: chef

  - node:
      hostname: 'node2'
      box: 'node2'
      desc: 'a secondary node to be used by a cluster'
      cpus: 2
      mem: 768
      ip: '10.10.10.13'
      mac: '02EECB9EC1ED'
      url: 'docker-reference.box'
      init: 'init.sh'
      roles:
        - 'role-cluster-node'
      run_client: false
      chef_node: chef

  - node:
      hostname: 'devstack'
      box: 'devstack'
      desc: 'devstack box to test and develop with'
      cpus: 1
      mem: 2048
      ip: '10.10.10.11'
      mac: '0800d2FF88F2'
      url: 'ubuntu_13_04_lts.box'
      init: 'init.sh'
      roles: ~
      run_client: false
      chef_node: ~

  - node:
      hostname: 'dev'
      box: 'dev'
      desc: 'develop on this box, it will not be bootstrapped by any [IPS]asS'
      cpus: 3
      mem: 1024
      ip: '10.10.10.14'
      mac: '02D7DAEB3F8C'
      url: 'docker-reference.box'
      init: 'init.sh'
      roles:
        - 'role-test'
      run_client: false
      chef_node: ~


#
# Unused MACs
# ================
#   080027EB6B03
#   02895C872CC5
#   024E89B94036
#   0253943912A9
#   0277E25CD585
#   025EDFE84F7F
#   02882CFDC8F3
#   0269347FC4C6
#
